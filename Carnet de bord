31 Janvier 2021:
Annonce de la réalisation des projets.
Choix de notre projet, qui est de récupérer les données d'une station météo à l'observatoire de la Perdrix pour les afficher sur un site web pour connaitre les conditions météos à distance.
Début de la réalisation d'un cahier des charges, et des éléments à demander aux utilisateurs

1 Février 2021:
Création de ce journal de bord

7 Février 2021:
Il faut que l'on trouve un nom pour le projet
Début de recherche sur la routineCSVtoSQL qui convertis les données csv fournis par le capteur pour les injecter dans le serveur en SQL toutes les deux minutes.
  Travail hors-cours :
réglage du problème du format de fichier que l'on utilise pour faire nos tests

8 Février:
Poursuites des essais pour faire la routine CSVtoSQL.
Découverte de la librairie Pandas qui pourrait permettre de créer directement des graphiques à partir du format csv. Peut être que nous n'avons pas alors besoin
de convertir les données au format SQL. Stocker une moyenne des valeurs toutes les 2 minutes en csv dans le serveur semble envisageable.

10 Février:
Affinage du cahier des charges qui est a rendre demain au professeur. Paul
Rapide recherche sur la librairie Python Pandas. Exporter les données moyennes sur 2 minutes sur le serveur avec une routine Python classique, puis faire les
graphiques quand nécéssaire sur le serveur semble envissageable. Paul

11 Février:
Debut création Routine (mais la c'est la bonne)
Si le ficher est vide ça mets les descripteur en haut du fichier csv
Programation de la recuperation ligne par ligne du fichier csv.
Création fonction pour récuperer les deux derniere minutes et faire un moyenne pour les nombre et les chaines de caractère des donnés csv du capteur.

12 Février:
Suite de la création de la Routine

13 Février:
Les valeurs sont désormais ajoutées à la fin du fichier csv du serveur. Les fonctions sont documentées. Etant à la maison, nous n'avons pas le problème que nous avions au lycée, 
c'est a dire qu'il y a une erreur si l'on essaie d'ouvrir avec python un fichier déjà ouvert par l'utilisateur. Nous verrons donc au retour en classe comment gérer ces erreurs(fichier
entrée et sortie). Paul

15 Février:
Essaie de regler un bug qui fait crash mon interpreteur python quand on essaie de lancer un script python depuis un autre (routine qui se lance toutes les 2 minutes)
Je me suis endu compte que les données du capteurs sont ajoutées à la fin du fichier alors qu'on prend toujours les premières lignes actuellement dans notre routine.
Je vais essayer de faire une routine qui simule le capteur. Paul

16 Février:
Création d'un programme qui simule le capteur, c'est a dire qui ajoute une ligne toutes les 10 secondes.
Modification de la routine pour qu'elle prenne les 20 dernières lignes et non les premières. A changer pour 12 lignes et non 20.
Découverte d'une technique pour faire une boucle toutes les x secondes en étant précis car juste avec des sleep ça se décale peu a peu

17 Février:
Rangement des fichiers sur le Github. Actualisation des fichiers qui étaient sur le Github et sur Repl. Création d'un fichier main.py qui dirige les autres programmes (fait 
juste des appels de fonction au bon moment).
Définition dans le brouillon de ce que l'on doit globalement faire.
Créations de fichiers de logs et d'erreurs horodatés pour simplifier les tests. Paul

21 Février:
S'il y a 6 "Calm" et 6 "Windy" par exemple, alors cela prend désormais la valeur que l'on a rencontré en dernier dans le temps.
Vérification de l'existence des fichiers d'entrée.
Création des fichiers de logs et d'erreurs s'ils n'existent pas. Paul

28 Février:
On a modifié la routine pour enregistrer la dernière ligne dans un fichier texte pour l'envoyer au serveur au lieu d'envoyer tout le document csv à chaque fois.
Les données seront directements envoyées sur le serveur, donc pas besoin de les transferer via internet.
Essaies de trouver comment faire un graphique

1 Mars:
Essaies pour faire des graphiques. Finalement on utilise matplotlib.
Les données des la dernière heure sont correctement affichées sur le graphique et on a trouvé comment mettre un fond de couleur pour indiquer les zones. 
On a également trouvé comment mettre des légendes.
On a fait une fonction pour créer les images avec le numéro de la colonne, le nom du graphique et de l'image, la valeur minimale et maximale mais a terme
nous ferrons surement une fonction pour chaque graphique car chaque donnée a besoin d'etre traité spécifiquement (différentes zones, couleurs etc)

2 Mars:
Les valeurs problématiques sont désormais toutes vers le haut(Paul).
Les temperatures sont désormais avec des zones bleus et rouges (froid/chaud)(Paul).
Peut etre faudrait-il lisser les valeurs pour avoir des zones de taille plus homogène(Paul).
L'axes des abcsices est affiché comme étant les minutes(Paul).

4 Mars:
On a fait des tests sur les images pour rendre le fond transparent pour qu'il ne soit pas blanc. On a aussi essayé de changer la couleur de l'écriture pour mieux voir sur fond noir
mais on n'a pas réussi a changer la couleur des axes et leur graduation. Finalement la couleur des valeurs des graduations peut etre changée quand même donc si on ne change pas la 
couleur des axes ce n'est pas grave.
On a fait des essais sur les couleurs a utiliser sur le site et sur les images pour que ce ne soit pas trop lumineux mais visible rapidement.
La date et l'heure est désormais inscrite en haut du graphique.
Pour l'instant le php ne semble pas être utile pour nous, mais il faudrait que l'on détecte quand un utilisateur se conncecte pour ne pas générer des images quand personne
n'en a besoin.

7 Mars:
Paul a fait une fonction qui créer les images sur demande avec les parametres que l'on veut et il a rajouté la date et l'heure sur les graphiques
Noah a fait des sur la detection d'une connexion au serveur et comment changer la couleur des axes du graphique, sans succès

11 Mars:
Expérimentations pour déclencher des pop up sur la page quand on le souhaite(Paul) -> concluant
Création des boutons pour naviguer entre les pages(Noah) -> concluant

12 Mars:
Reglage d'un bug pour la couleur des boutons pour naviguer entre les pages(Paul)
Debut de reflexion sur comment generer le fichier avec les alertes(Paul) -> les alertes sont actuellement créées toutes les 2 minutes en meme temps que les images et elles
s'affichent une fois sur 2 (le but était de ne pas les afficher pleins de fois d'affiler). Il faudrait peut être créer les alertes plus fréquement que toutes les 2 minutes ?

15 Mars:
Creation d'un fichier alertes.py pour générer les alertes (actuellement toutes les 2 minutes) a partir du fichier csv_serveur.csv.
Tests pour mettre le site sur un serveur avec Wamp.

16 Mars:
Les alertes ne s'activent maintenant qu'une fois toutes les 30 minutes pour ne pas faires des alertes tout le temps pour l'utilisateur.

18 Mars:
Prise en charge de la machine qui nous servira de serveur, mais faute d'avoir le mot de passe, nous n'avons pas significativement avancé.
Essaies sur les pop-up de la page et réglage de problèmes d'affichage du site.

21 Mars:
Essaie d'installation de la licence Windows Serveur 2003 que nous avons déjà, mais le serveur de détecte pas notre clé USB.
Planification du travail à faire le lendemain et début d'essais sur Wamp en localhost.

22 Mars:
Essaie d'installation de la licence avec un CD cette fois ci. Le serveur n'a pas détecté non plus notre CD.

25 Mars:
Suite des essais pour installer la licence sur le serveur et mise en place d'une liste des alertes des 30 dernières minutes sur le site. Suite des essais en localhost
avec Wamp

28 Mars:
Est-ce qu'on a fait le projet ce jour la ?

1 Avril:
Téléchargement de la bonne licence cette fois normalement. Nous n'avons ensuite pas pu extraire les fichiers car le fichier de sortie fait plus de 4 Go et la clé
USB que nous avions ne pouvait pas gérer les fichiers de plus de 4Go. Réglage d'un problème d'affichage de la largeur de la page et messages affichés sur le site plus beaux
(phrases complètes).

2 Avril:
Changement de certains noms en français plutôt qu'en anglais (images etc), réflexion sur la structuration des fichiers sur le serveur a terme(Paul).

3 Avril:
Création du fichier fontctions_communes_et_parametres pour ne pas répéter certaines fonctions identiques dans les autres fichiers ainsi que les parametres pour les seuils
d'image et les noms des fichiers(Paul).
Création de la fonction verifier_fichiers() qui vérifie si tous les fichiers existent et les crées si nécessaires(Paul).

4 Avril:
On a essayé de mettre le fichier que l'on avait trouvé vendredi mais ça n'a pas marché. En fait c'est une machine virtuelle. On a essayé de mettre wamp
sur le serveur mais il n'est pas connecté à internet car le réseau du lycée le bloque car il ne le connait pas. De plus, il n'arrive pas a lire le
fichier d'installation de wamp que l'on a mis via une clé usb. On a donc avancé un peu sur la mise au propre du code et on a enlevé les descipteurs
que l'on utilisaient pas dans csv_serveur.

6 Avril:
Création d'une fonction qui compte le nombre de lignes dans un fichier et mise en place d'une sécurité pour que ça ne mette pas d'erreur quand on essaie
de créer des images ou des alertes quand il n'y a pas assez de lignes dans le fichier csv_serveur(Paul).

7 Avril:
J'ai branché l'ordinateur pour voir si ça marcherais demain. J'ai bien fait car il fallait un mot de passe que j'ai pu demander. Autrement, nous n'aurions
rien pu faire le lendemain(Paul).
J'ai remis les descripteurs que j'avais enlevé quelques jours plus tôt sur demande du club Astro(Paul).
