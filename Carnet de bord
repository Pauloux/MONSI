CARNET DE BORD

31 Janvier 2021:
Annonce de la réalisation des projets.
Choix de notre projet, qui est de récupérer les données d'une station météo à l'observatoire de la Perdrix pour les afficher sur un site web
pour connaître les conditions météos à distance.
Début de la réalisation d'un cahier des charges, et des éléments à demander aux utilisateurs (membres du club Astro).

1 Février 2021:
Création de ce journal de bord, d’un dossier Github et d’un fichier Repl pour pouvoir travailler à deux en même temps sur le projet.

7 Février 2021:
Nous aimerions trouver un nom pour le projet.
Début de recherche sur la routine CSVtoSQL qui convertit les données csv fournies par le capteur pour les injecter dans le serveur en SQL toutes
les deux minutes.
Réglage du problème du format de fichier que l'on utilise pour faire nos tests.

8 Février:
Poursuites des essais pour faire la routine CSVtoSQL.
Découverte de la librairie Pandas qui pourrait permettre de créer directement des graphiques à partir du format csv. Peut être que nous n'avons
pas alors besoin de convertir les données au format SQL. Stocker une moyenne des valeurs toutes les 2 minutes en csv dans le serveur semble envisageable.

10 Février:
Affinage du cahier des charges qui est à rendre demain au professeur(Paul).
Rapide recherche sur la librairie Python Pandas. Exporter les données moyennes sur 2 minutes sur le serveur avec une routine Python classique,
puis faire les
graphiques quand nécessaire avec la libraire Pandas sur le serveur semble envisageable (Paul).

11 Février:
Début de la création de la routine qui stock dans le serveur toutes les 2 minutes les valeurs moyennes des 2 dernières minutes au format CSV(Paul).
Désormais, si le fichier de sortie n’existe pas, la liste des descripteurs sont écrits en première ligne du fichier(Paul).
Programmation de la récupération ligne par ligne du fichier csv d’entrée(Paul).
Création de la fonction pour récupérer les deux dernières minutes et faire un moyenne des données csv du capteur(Paul).

12 Février:
Suite de la création de la routine(Paul).

13 Février:
Les valeurs sont désormais ajoutées à la fin du fichier csv du serveur (Paul).
Documentation des fonctions(Paul).
Étant à la maison, nous n'avons pas le problème que nous avions au lycée, c'est à dire qu'il y a une erreur si l'on essaie d'ouvrir avec python un
fichier déjà ouvert par l'utilisateur.
Nous verrons donc au retour en classe comment gérer ces erreurs pour les fichiers d'entrée comme ceux de sortie(Paul).

15 Février:
Essais de régler un bug qui fait crash mon interpréteur python quand on essaie de lancer un script python depuis un autre (routine qui se lance
toutes les 2 minutes)(Paul).
Je me suis rendu compte que les données du capteur sont ajoutées à la fin du fichier alors qu'on prend toujours les premières lignes actuellement
dans notre routine(Paul).
Je vais essayer de faire une routine qui simule le capteur(Paul)

16 Février:
Création d'un programme qui simule le capteur, c'est-à- dire qui ajoute une ligne toutes les 10 secondes(Paul).
Modification de la routine pour qu'elle prenne les 20 dernières lignes et non les premières(Paul).
Découverte d'une technique pour faire une boucle toutes les x secondes en étant précis car juste avec des sleep ça se décale peu à peu(Paul).

17 Février:
La routine prend maintenant bel et bien les 12 dernières lignes et non les 20 comme j’avais fait hier(Paul).
Rangement des fichiers sur le Github eet actualisation des fichiers qui étaient sur le Github et sur Repl(Paul).
Création d'un fichier main.py qui dirige les autres programmes (fait juste des appels de fonction au bon moment)(Paul).
Définition dans le brouillon de ce que l'on doit globalement faire(Paul).
Créations de fichiers de logs et d'erreurs horodatés pour simplifier les tests(Paul)

21 Février:
S'il y a 6 "Calm" et 6 "Windy" par exemple, alors cela prend désormais la valeur que l'on a rencontré en dernier dans le temps(Paul).
Vérification de l'existence des fichiers d'entrée(Paul).
Création des fichiers de logs et d'erreurs s'ils n'existent pas(Paul).

25 Février:
Mise au propre du cahier des charges et du Carnet de bord, et ajout des ceux-ci sur le drive(Paul).

28 Février:
Modification de la routine pour enregistrer la dernière ligne dans un fichier texte pour l’envoyer au serveur au lieu d’envoyer tout le
document csv_serveur à chaque fois?
Après discussion, les données seront directements sur le serveur donc pas besoin de les transférer via cette méthode. Donc retour en arrière sur ce point.
Tentatives de réalisation d’un graphique pour voir comment ça fonctionne.

1 Mars:
Suite des essais pour créer des graphiques? Finalement, on utilisera matplotlib.
On a ainsi les valeurs correctements affichées sur le graphique.
Documentation sur comment mettre des zones en fond, mettre des légendes, un titre…
Réalisation d’une fonction pour créer une image à partir du numéro de la colonne à récupérer dans csv_serveur, du titre du graphique,
et des valeurs minimales et maximales.
A termes, nous aurons certainement besoin d’une fonction pour chaque graphique car chacun à des spécificités(zones, couleurs…)

2 Mars:
Désormais, tous les graphiques ont les valeurs qui indiquent des conditions dégradés vers le haut du graphique et les bonnes condition vers le bas(Paul).
Sur demande du club Astro, les zones des températures ont les couleurs rouges et bleus(chaud/froid)(Paul).
Ajout du label “minutes” pour l’axe des abscisse sur les graphiques(Paul).

4 Mars:
Tentatives de rendre le fond des images transparent pour ne pas que cela rende blanc sur le site noir -> concluant.
Tentatives de changer la couleur du texte sur le graphique(titre, légende…), mais nous n’avons pas réussi à changer la couleur des axes ainsi
que leurs graduations. Essais de couleurs à utiliser sur le site et les images pour que ce ne soit pas trop lumineux (utilisation dans l’obscurité)
mais rapidement visible.
Ajout de la date et de l’heure en haut des graphiques
Réflexion sur l’utilité du PHP : il ne semble pas être nécessaire pour nous à l’heure actuelle, mais on aimerait à terme détecter quand un
utilisateur se connecte sur le site pour ne pas générer les images quand personne n’en a besoin

7 Mars:
Création d’une fonction qui créer une image sur demande avec les paramètres que l’on souhaite(Paul).
Recherche sur la détection d’une connexion au serveur et sur la possibilité de changer la couleur des axes sur le graphique. Découverte que la
couleur des axes ne pouvait pas être changée avec cette librairie mais ce n’est pas un aspect très important.(Noah).

11 Mars:
Expérimentations pour déclencher des pop up sur la page quand on le souhaite -> concluant (Paul).
Création de boutons pour naviguer entre les pages -> concluant(Paul).

12 Mars:
Suppression d’un bug dans le style qui gérait la couleur des boutons de navigation entre les pages(Paul).
Début de réflexion sur la génération des alertes. Réalisation d’un prototype dans le fichier de création des images qui génère des alertes toutes
les 2 minutes. Actuellement les alertes ne se génère qu’une fois sur deux, mais l’objectif est de pouvoir définir un délai minimal entre
l’affichage de deux alertes du même type pour ne pas surcharger le site(Paul).

15 Mars:
Création du fichier alertes.py qui est chargé de générer les alertes à partir du fichier csv_serveur.
Expérimentations pour mettre le site sur un serveur avec Wamp.

16 Mars:
Modification de la génération des alertes pour qu’elles ne s’affichent désormais qu’une fois toutes les 30 minutes pour le confort de l’utilisateur.

18 Mars:
Réception de la machine qui nous servira de serveur, mais faute d’avoir le mot de passe, nous n’avons pas significativement avancé.
Réalisation d’essais pour améliorer les pop-up des alertes sur le site et réglage d’un problème d’affichage sur le site.

21 Mars:
Tentatives d'installation de la licence Windows Serveur 2003 que nous possédons, mais le serveur ne détecte pas notre clé USB.
Planification du travail à faire le lendemain et réalisation d’essais pour mettre notre site en localhost avec Wamp pour vérifier s’il
fonctionne (Il était actuellement sur Repl)

22 Mars:
Tentative d'installation de la licence Windows Server 2003 mais cette fois ci avec un CD que l’on a gravé. Le serveur n’a pas détecté notre CD non plus.

25 Mars:
Suite des essais pour installer la licence sur le serveur.
Ajout de la liste des alertes qu’il y a eu ces 30 dernières minutes sur le site.
Suite des essais pour mettre le site en localhost avec Wamp.

1 Avril:
Apparement, nous n’avions pas téléchargé le bon fichier, donc on a téléchargé le bon cette fois ci. Cependant l’extraction des
fichiers n’a pas aboutie car le fichier final fait plus de 4Go or, la clé USB que nous avions ne supportait pas les fichiers de plus de 4Go (FAT32).
Réglage d'un problème d'affichage par rapport à la largeur de la page.
Les alertes affichées sur le site sont désormais des messages que l’on peut modifier et non plus le nom des alertes du type Vent_1 ou Temperature_2.

2 Avril:
Changement de certains noms en français plutôt qu'en anglais, notamment sur le nom des images(Paul).
Réflexion sur la structuration des fichiers sur le serveur à terme(Paul).

3 Avril:
Création du fichier fonctions_communes_et_parametres.py. Il a pour fonction de regrouper les fonctions communes aux fichiers python que
l’on a déjà, comme ecrire_erreur(), get_heure()... De plus, les paramètres généraux seront stockés ici pour ne plus avoir à changer les
paramètres dans tous les autres fichiers et risquer d’en oublier un, comme les noms des fichiers par exemple.
Ajout d’une variable gérant les seuils d’alertes dans ce fichier(Paul).
Création de la fonction verifier_fichiers() dans ce fichier qui vérifie si tous les fichiers existent et les crés si nécessaires(Paul).

4 Avril:
Tentative d’installation du fichier que l’on avait trouvé sans réussir à l’extraire. C’est en réalité une machine virtuelle, donc pas ce
que l’on cherche.
Tentative d’installation de Wamp sur le serveur. Le système d’exploitation du serveur que l’on a réussi à installer pour l’instant (Windows XP)
n’arrive pas à lire le fichier d’installation de Wamp. De plus, le serveur étant étranger au réseau du lycée, celui ci lui refuse l’accès à
internet, ne simplifiant pas nos essais.
Mise au propre du code et retrait des descripteurs que l’on utilisait finalement pas dans csv_serveur (les conditions du vent, des nuages… car
on génère les alertes à partir des valeurs avec les seuils définis dans le fichier de paramètres)

6 Avril:
Création d'une fonction qui compte le nombre de lignes dans un fichier.
Mise en place d'une sécurité pour que ça ne mette pas d'erreur quand on essaie de créer des images ou des alertes quand il n'y a pas assez
de lignes dans le fichier csv_serveur(Paul).

7 Avril:
Réception d’un ordinateur plus récent qui nous servira normalement de serveur. Il y avait à la base une caméra de l'observatoire sur cet ordinateur,
nous devrons donc rajouter la caméra sur le site.
Tentative de la démarrer en prévision du travail du lendemain. Heureusement car il y avait un mot de passe que l’on a pu demandé pour que l’on
puisse travailler dessus le lendemain(Paul).
Ajout des descripteurs que l’on avait enlevé quelques jours plus tôt à la demande du club Astro pour pouvoir changer les seuils des alertes
depuis le logiciel du capteur(Paul).

8 Avril:
Les alertes se génèrent par rapport aux conditions données par le capteur et non plus à partir des valeurs. Les seuils peuvent donc être réglés
sur le logiciel du capteur comme l’a demandé le club Astro. Cependant, il faut toujours rentrer les seuils dans le fichier de paramètres pour
la génération d’image.
Tentative d’installation de Wamp sur ce nouveau serveur. Cependant, Wamp nécessite d’autres paquets à télécharger à côté, ce qui n’est pas facile
sans connexion internet directement sur le serveur (même problème qu’avec l’autre serveur, le réseau du lycée nous refuse l’accès à internet et
nous n’avons pas de possibilité de mettre via WiFi).

11 Avril:
Ajouts de commentaires et des aides dans les fonctions.
Ajout d'une 4ème page au site pour avoir la caméra. On n'a actuellement pas la caméra donc on ne peut pas tester le dispositif mais prenant
l'image de la caméra et en actualisant assez souvent, cela devrait fonctionner.
Clarification et simplification du code lorsque possible.
Création du diaporama qui servira lors de la présentation du projet.

12 Avril:
Suite de l’ajout de commentaires et de la simplification du code lorsque possible.
Modification de l’implémentation de la liste des descripteurs pour pouvoir en ajouter ou en enlever facilement(Il fallait modifier dans plusieurs
fichiers auparavant)(Paul).

13 Avril:
Finalisation des commentaires et de la simplification du code que l’on a actuellement(Paul).
Mise au propre de ce carnet de bord(Paul).
Mise en place d'horaires de fonctionnements à définir dans les paramètres. Les programmes ne s'éxécutent donc que la nuit entre les horaires
que l'on a défini(Paul).

18 Avril:
Modification de la création des images pour que quand le programme se lance, cela n'affiche pas les valeurs d'hier (car ce sont les dernières dans csv_serveur).
Optimisation de la création des images en ne faisant plus qu'un appel à get_derniere_heure()
Modification du simulateur car pour tester, il faut désormais que les dates des valeurs soient proches de la date actuelle. Les valeurs du capteur sont donc toujours
générées à partir d'une base de données, mais la date et l'heure sont modifiées artificiellement. Le point négatif est que quand on test en accéléré, les valeurs
ne sont pas espacées de 10 secondes mais cela ne nous gêne pas.

19 Avril:
Vérification de l'heure aussi pour les alertes.
Création d'un site où l'on peut voir les 4 graphiques en même temps pour que l'on voit rapidement quand on test.
Reglage d'un bug dans le simulateur qui remplaçait la date même si c'était une ligne de descripteur. Le programme considérait ensuite que la ligne était valide
et provoquait une erreur.
Affiche maintenant une image annonçant "Capteur arrêté" quand le programme est arrêté pour prévenir l'utilisateur.

26 Avril:
Installer de WAMP sur le serveur, mais il n'y a pas le menu et on n'arrive pas a mettre le serveur accessible depuis un autre ordinateur
